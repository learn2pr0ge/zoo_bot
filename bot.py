import telebot
import config
from quiz import QuizModule
from config import valid_commands, user_scores, creatures, result_dict
from api import *



token = config.BOT_TOKEN
bot = telebot.TeleBot(token)

#–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start



@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = telebot.types.KeyboardButton(text="–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É ü¶Å")
    button2 = telebot.types.KeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ üêò")
    button3 = telebot.types.KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤ —Å–æ—Ü—Å–µ—Ç–∏ ü¶í")
    button4 = telebot.types.KeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ üì®")
    button5 = telebot.types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üêò")

    keyboard.add(button1,button2,button3,button4,button5)
    with open('/home/a1nix/Desktop/fullstack_factory/python/moscow_zoo/zoo_bot/static/images/zoo_logo.jpeg', 'rb') as photo1:
        bot.send_photo(chat_id, photo1)
    bot.send_message(
        chat_id,
        """
        <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Telegram –±–æ—Ç–∞ –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –ó–æ–æ–ø–∞—Ä–∫–∞!</b> ü¶Åüêòü¶í\n\n
        <i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:</i>\n
        - <b>–ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É"</b> –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –≤–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ üêØ\n
        - <b>–ö–Ω–æ–ø–∫–∞ "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑"</b> –ø–æ–∑–≤–æ–ª–∏—Ç –ø—Ä–æ–π—Ç–∏ –µ—â–µ —Ä–∞–∑ –Ω–∞—à—É –≤–∏–∫—Ç–æ—Ä–∏–Ω—É üíå\n
        - <b>–ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º"</b> –ø–æ–º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å –ø–æ—Å—Ç –æ –≤–∞—à–µ–º —Ç–æ—Ç–µ–º–Ω–æ–º –∂–∏–≤–æ—Ç–Ω–æ–º –≤ —Å–æ—Ü—Å–µ—Ç–∏ üìù\n
        - –ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>"–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏"</b> ‚ùì\n\n
        <b>–î–ª—è –≤—ã–¥–∞—á–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: <code>/animal –∏–º—è_–∂–∏–≤–æ—Ç–Ω–æ–≥–æ</code> –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ üî§</b>\n
        <b>–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:</b> \n
        <code>/animal dog</code> \n
        <code>/animal elephant</code>
        
        """,
        parse_mode='HTML',
        reply_markup=keyboard
    )
    #–¥–µ–ª–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –≤–≤–æ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
    if message.text not in config.valid_commands and not message.text.startswith('/animal'):
        bot.send_message(chat_id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é –∫–æ–º–∞–Ω–¥—É')

@bot.message_handler(commands=['animal'])
def show_animal(message):
    chat_id = message.chat.id
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = telebot.types.KeyboardButton(text="–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É ü¶Å")
    button2 = telebot.types.KeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ üêò")
    button3 = telebot.types.KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤ —Å–æ—Ü—Å–µ—Ç–∏ ü¶í")
    button4 = telebot.types.KeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ üì®")
    button5 = telebot.types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üêò")

    keyboard.add(button1, button2, button3, button4,button5)
    try:
        command_parts = message.text.split()
        if len(command_parts) != 2:
            raise ValueError(f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Ñ–æ—Ä–º–∞—Ç–∞ /animal –∏–º—è_–∂–∏–≤–æ—Ç–Ω–æ–≥–æ')

        elif not command_parts[1].isalpha():
            raise ValueError(f'–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É —Ñ–æ—Ä–º–∞—Ç–∞ /animal –∏–º—è_–∂–∏–≤–æ—Ç–Ω–æ–≥–æ')
        elif command_parts[1] not in creatures:
            raise ValueError(f'–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∏–º—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ')
        else:
            command_parts = command_parts[1]
            animal_link = ApiAnimal.get_api(command_parts)
            if animal_link.startswith('http'):
                bot.send_photo(chat_id, photo=animal_link, reply_markup=keyboard)
            else:
                bot.send_message(chat_id, animal_link)

    except ValueError as e:
        bot.send_message(chat_id, f'–û—à–∏–±–∫–∞ {e}')
        return
    except Exception as e:
        bot.send_message(chat_id, f'–û—à–∏–±–∫–∞ {e}')
        return




@bot.message_handler(func=lambda message: message.text == "–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ üì®")
def contact_support(message):
    chat_id = message.chat.id
    keyboard = telebot.types.InlineKeyboardMarkup()
    button_telegram = telebot.types.InlineKeyboardButton(text="Telegram", url= 'https://t.me/Moscowzoo_official')


    keyboard.add(button_telegram)

    with open('/home/a1nix/Desktop/fullstack_factory/python/moscow_zoo/zoo_bot/static/images/owl.jpg', 'rb') as photo1:
        bot.send_photo(chat_id, photo1)
    bot.send_message(chat_id, '–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –≤–∑—è—Ç–∏—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –Ω–∞ –ø–æ–ø–µ—á–µ–Ω–∏–µ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ‚úí \n'
                              'a.zhemchugov@moscowzoo.ru \n'
                              '–¢–µ–ª–µ—Ñ–æ–Ω: +7 (499) 252-29-51', reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text == "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤ —Å–æ—Ü—Å–µ—Ç–∏ ü¶í")
def share_soc(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Ç –ª–∏ –Ω–∞—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ
    if user_id not in result_dict or not result_dict[user_id]:
        bot.send_message(chat_id, '–í—ã –µ—â–µ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É –∏ —É –≤–∞—Å –Ω–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É ü¶Å')
    else:
        text, link = result_dict[user_id]
        enc_text = QuizModule.quiz_result(text)
        url = 'https://t.me/MoscowZooQueryBot'

        # –ø–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–µ 4 —Å–ª–æ–≤–∞
        title = text.split()
        title = title[:4]
        fin_title = ' '.join(title)
        fin_title = fin_title[3:]


        #–¥–µ–ª–∞–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏
        keyboard = telebot.types.InlineKeyboardMarkup()
        button_vk = telebot.types.InlineKeyboardButton(text="VK", url=f'https://vk.com/share.php?url={url}&title={fin_title}&comment={enc_text}')
        button_odn = telebot.types.InlineKeyboardButton(text="Odnoklassniki", url=f'https://connect.ok.ru/offer?url={url}&title={fin_title}&comment={enc_text}')
        button_twit = telebot.types.InlineKeyboardButton(text="Twitter", url=f'https://twitter.com/intent/tweet?text={enc_text[:200]}&url={url}')
        keyboard.add(button_vk,button_odn,button_twit)
        description, photo = result_dict[user_id]
        bot.send_photo(chat_id, photo=photo)
        bot.send_message(
            chat_id,
            description,
            parse_mode='HTML'
        )
        bot.send_message(chat_id, '–í—ã–±–µ—Ä–µ—Ç–µ —Å–æ—Ü—Å–µ—Ç—å –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º', reply_markup= keyboard)




@bot.message_handler(func=lambda message: message.text == "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ üêò")
def try_again(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Ç –ª–∏ –Ω–∞—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ
    if user_id not in result_dict or not result_dict[user_id]:
        bot.send_message(chat_id, '–í—ã –µ—â–µ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É ü¶Å')
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = telebot.types.KeyboardButton(text="–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É ü¶Å")
        button2 = telebot.types.KeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ üêò")
        button3 = telebot.types.KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤ —Å–æ—Ü—Å–µ—Ç–∏ ü¶í")
        button4 = telebot.types.KeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ üì®")

        keyboard.add(button1, button2, button3, button4)
    else:
        del result_dict[user_id]
        game(message)

@bot.message_handler(func=lambda message: message.text == "–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É ü¶Å")
def game(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Ç –ª–∏ –Ω–∞—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ
    if user_id not in result_dict or not result_dict[user_id]:

        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = telebot.types.KeyboardButton(text="–ü–æ–µ—Ö–∞–ª–∏ üêø")
        keyboard.add(button1)
        bot.send_message(chat_id,'–í–∞–º –±—É–¥–µ—Ç –∑–∞–¥–∞–Ω–æ 10 –≤–æ–ø—Ä–æ—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤—ã–±—Ä–∞—Ç—å –≤–∞—à–µ–≥–æ —Ç–æ—Ç–µ–º–Ω–æ–≥–æ'
                         '–∂–∏–≤–æ—Ç–Ω–æ–≥–æ. –ù–∞–∂–∏–º–∞–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç 1 –¥–æ 4 —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞.',reply_markup=keyboard)
    else:
        bot.send_message(chat_id, """<b>–í—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É. –ß—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø—Ä–æ–π—Ç–∏ –µ—â–µ —Ä–∞–∑ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ üêò \n
        –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: </b>""", parse_mode='HTML')
        description, photo = result_dict[user_id]
        bot.send_photo(chat_id, photo=photo)
        bot.send_message(
            chat_id,
            description,
            parse_mode='HTML'
        )
#—Ñ—É–Ω–∫—Ü–∏–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
@bot.message_handler(func=lambda message: message.text == "–ü–æ–µ—Ö–∞–ª–∏ üêø")
def start_quiz(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—á–∫–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id not in user_scores:
        user_scores[user_id] = 0
        send_question(chat_id, 0)
    else:
        user_scores[user_id] = 0
        send_question(chat_id, 0)

def send_question(chat_id, question_index):
    line1 = QuizModule.quiz_quest(question_index)
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    answer_list = []
    for question, answers in line1.items():
        # –ø—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤–ª–æ–∂–µ–Ω–Ω–æ–º—É —Å–ª–æ–≤–∞—Ä—é, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—Ç–≤–µ—Ç—ã –∏ –∏—Ö –±–∞–ª–ª—ã
        for answer, points in answers.items():
            answer_list.append(answer)
    button1 = telebot.types.KeyboardButton(text=f"–û—Ç–≤–µ—Ç 1")
    button2 = telebot.types.KeyboardButton(text=f"–û—Ç–≤–µ—Ç 2")
    button3 = telebot.types.KeyboardButton(text=f"–û—Ç–≤–µ—Ç 3")
    button4 = telebot.types.KeyboardButton(text=f"–û—Ç–≤–µ—Ç 4")
    button5 = telebot.types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üêò")
    keyboard.add(button1, button2, button3, button4, button5)
    bot.send_message(chat_id, f"""<b>{question}</b>""", reply_markup=keyboard, parse_mode='HTML')
    bot.send_message(chat_id, f"""
    <b>–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–∞:</b>
    <i>–û—Ç–≤–µ—Ç 1: {answer_list[0]}</i>
    <i>–û—Ç–≤–µ—Ç 2: {answer_list[1]}</i>
    <i>–û—Ç–≤–µ—Ç 3: {answer_list[2]}</i>
    <i>–û—Ç–≤–µ—Ç 4: {answer_list[3]}</i>
    """, parse_mode='HTML')

    # –ø–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
    bot.register_next_step_handler_by_chat_id(chat_id, process_answer, question_index, answer_list)

def process_answer(message, question_index, answer_list):
    chat_id = message.chat.id
    user_id = message.from_user.id
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üêò":
        start(message)
        return

    if message.text == "–û—Ç–≤–µ—Ç 1":
        selected_answer = answer_list[0]
    elif message.text == "–û—Ç–≤–µ—Ç 2":
        selected_answer = answer_list[1]
    elif message.text == "–û—Ç–≤–µ—Ç 3":
        selected_answer = answer_list[2]
    elif message.text == "–û—Ç–≤–µ—Ç 4":
        selected_answer = answer_list[3]

    #selected_answer = message.text.split(":")[1].strip()  # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ—Ç–≤–µ—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è


    # –ø–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∏ –±–∞–ª–ª—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    line1 = QuizModule.quiz_quest(question_index)
    for question, answers in line1.items():
        for answer, points in answers.items():
            if answer == selected_answer:
                user_scores[user_id] += points

    bot.send_message(chat_id, f"""<i>–í–∞—à —Ç–µ–∫—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {user_scores[user_id]} –±–∞–ª–ª–æ–≤</i>""", parse_mode='HTML')


    if question_index + 1 < 10:
        send_question(chat_id, question_index + 1)
    else:
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞–±—Ä–∞–Ω–Ω—ã—Ö –±–∞–ª–ª–æ–≤
        bot.send_message(chat_id,
                         f"""<b>–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í–∞—à –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {user_scores[user_id]} –±–∞–ª–ª–æ–≤</b>""",
                         parse_mode='HTML')
        if user_scores[user_id] <= 15:
            animal_link = ApiAnimal.get_api('turtle')
            result_dict[user_id] = ["""
                <b>–¢–≤–æ–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –ß–µ—Ä–µ–ø–∞—Ö–∞ üê¢</b> 
                <b>–¢—ã –≤—Å–µ–≥–¥–∞ —Å—Ç—Ä–µ–º–∏—à—å—Å—è –∫ –≥–∞—Ä–º–æ–Ω–∏–∏ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –ø–æ–∫–æ—é, –∫–∞–∫ —á–µ—Ä–µ–ø–∞—Ö–∞ –≤ —Å–≤–æ—ë–º –º–µ–¥–ª–µ–Ω–Ω–æ–º –∏ —Ä–∞–∑–º–µ—Ä–µ–Ω–Ω–æ–º —Ä–∏—Ç–º–µ.</b>\n\n
                <i>–í–∑—è–≤ —á–µ—Ä–µ–ø–∞—Ö—É –Ω–∞ –ø–æ–ø–µ—á–µ–Ω–∏–µ, —Ç—ã –±—É–¥–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –Ω–µ —Ç–æ–ª—å–∫–æ —Å–µ–±—è, –Ω–æ –∏ –∂–∏–≤–æ—Ç–Ω–æ–µ, —á—å—ë —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –∏ –¥–æ–ª–≥–æ–∂–∏—Ç–µ–ª—å—Å—Ç–≤–æ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—Ç.</i>\n\n
                <b>–ß–µ—Ä–µ–ø–∞—Ö–∞ –Ω–∞—É—á–∏—Ç —Ç–µ–±—è —Ü–µ–Ω–∏—Ç—å –∫–∞–∂–¥—ã–π –º–æ–º–µ–Ω—Ç –∂–∏–∑–Ω–∏, –Ω–µ —Å–ø–µ—à–∞, –Ω–æ —É–≤–µ—Ä–µ–Ω–Ω–æ –¥–æ—Å—Ç–∏–≥–∞—è —Ü–µ–ª–µ–π.</b>\n\n
                <i>–ó–∞–±–æ—Ç–∞ –æ —á–µ—Ä–µ–ø–∞—Ö–µ ‚Äî —ç—Ç–æ —Å–∏–º–≤–æ–ª —Ç–≤–æ–µ–π –∑–∞–±–æ—Ç—ã –æ –º–∏—Ä–µ –∏ –ø—Ä–∏—Ä–æ–¥–Ω–æ–π –≥–∞—Ä–º–æ–Ω–∏–∏</i>.
                """, animal_link]
            description, link = result_dict[user_id]
            bot.send_photo(chat_id, photo=animal_link)
            bot.send_message(
                chat_id,
                description,
                parse_mode='HTML'
            )
        elif 15 < user_scores[user_id] <= 22:
            animal_link = ApiAnimal.get_api('leopard')
            result_dict[user_id] = ["""
                <b>–¢–≤–æ–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –ö–æ—à–∫–∞ üêÜ</b>
                <b>–ö–∞–∫ –∏ –∫–æ—à–∫–∞, —Ç—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º –∏ –ª—é–±–∏—à—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–º—Ñ–æ—Ä—Ç –≤–æ–∫—Ä—É–≥ —Å–µ–±—è, –Ω–æ –≤—Å–µ–≥–¥–∞ —Ü–µ–Ω–∏—à—å –≤—Ä–µ–º—è, –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω–æ–µ —Å –±–ª–∏–∑–∫–∏–º–∏.</b>\n\n
                <i>–í–∑—è–≤ –∫–æ—à–∫—É –ø–æ–¥ —Å–≤–æ—ë –∫—Ä—ã–ª–æ, —Ç—ã –ø–æ–º–æ–∂–µ—à—å –µ–π —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –∑–∞—â–∏—â—ë–Ω–Ω–æ–π, –∞ –≤–∑–∞–º–µ–Ω –æ–Ω–∞ –ø–æ–¥–∞—Ä–∏—Ç —Ç–µ–±–µ —É—é—Ç –∏ —Ç–µ–ø–ª–æ.</i>\n\n
                <b>–ö–æ—à–∫–∞ ‚Äî —ç—Ç–æ —Å–∏–º–≤–æ–ª –≥—Ä–∞—Ü–∏–æ–∑–Ω–æ—Å—Ç–∏ –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è, –∫–∞–∫ –∏ —Ç–≤–æ—è –∂–∏–∑–Ω—å, –≥–¥–µ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å –±–∞–ª–∞–Ω—Å –º–µ–∂–¥—É —Å–≤–æ–±–æ–¥–æ–π –∏ –¥–æ–º–∞—à–Ω–∏–º —É—é—Ç–æ–º.</b>\n\n
                <i>–ó–∞–±–æ—Ç–∞ –æ –∫–æ—à–∫–µ ‚Äî —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—á–Ω—É—é —Å–≤—è–∑—å —Å –∂–∏–≤–æ—Ç–Ω—ã–º, –∫–æ—Ç–æ—Ä–æ–µ, –∫–∞–∫ –∏ —Ç—ã, –ª—é–±–∏—Ç —Å–≤–æ–±–æ–¥—É –∏ –∫–æ–º—Ñ–æ—Ä—Ç.</i>
                """, animal_link]
            description, link = result_dict[user_id]
            bot.send_photo(chat_id, photo=animal_link)
            bot.send_message(
                chat_id,
                description,
                parse_mode='HTML'
            )

        elif 22 < user_scores[user_id] <= 30:
            animal_link = ApiAnimal.get_api('wolf')
            result_dict[user_id] = ["""
                <b>–¢–≤–æ–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –í–æ–ª–∫ üê∫</b>
                <b>–¢—ã, –∫–∞–∫ –≤–æ–ª–∫, —Å—Ç—Ä–µ–º–∏—à—å—Å—è –∫ –Ω–æ–≤—ã–º –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–º, –≤—Å–µ–≥–¥–∞ –≤ –ø–æ–∏—Å–∫–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π, –Ω–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Ü–µ–Ω–∏—à—å —Å–≤–æ—é –∫–æ–º–∞–Ω–¥—É –∏ –¥—Ä—É–∑–µ–π.</b>\n\n
                <i>–í–æ–ª–∫ —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç —Å–∏–ª—É, —Å–ø–ª–æ—á—ë–Ω–Ω–æ—Å—Ç—å –∏ –≤–µ—Ä–Ω–æ—Å—Ç—å ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è –µ–≥–æ, —Ç—ã –ø—Ä–æ—è–≤–ª—è–µ—à—å —ç—Ç–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –≤ —Å–µ–±–µ.</i>\n\n
                <b>–ó–∞–±–æ—Ç–∞ –æ –≤–æ–ª–∫–µ–¥–∞—Å—Ç —Ç–µ–±–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –ø—Ä–∏—Ä–æ–¥–Ω–æ–≥–æ –º–∏—Ä–∞, –Ω–∞–ø–æ–º–∏–Ω–∞—è –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ –¥—Ä—É–∂–±—ã –∏ –µ–¥–∏–Ω—Å—Ç–≤–∞.</b> \n\n
                <i>–í–æ–ª–∫ –≤—Å–µ–≥–¥–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤ –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö —Å–≤–æ–µ–π —Å—Ç–∞–∏, –∏ —Ç–≤–æ—è –ø–æ–º–æ—â—å –µ–º—É ‚Äî —ç—Ç–æ –≤–∫–ª–∞–¥ –≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏—Ä–æ–¥–Ω–æ–≥–æ –º–∏—Ä–∞.</i>
                """, animal_link]
            description, link = result_dict[user_id]
            bot.send_photo(chat_id, photo=animal_link)
            bot.send_message(
                chat_id,
                description,
                parse_mode='HTML'
            )
        elif user_scores[user_id] > 30:
            animal_link = ApiAnimal.get_api('dolphin')
            result_dict[user_id] = ["""
                            <b>–¢–≤–æ–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –î–µ–ª—å—Ñ–∏–Ω üê¨ </b>
                            <b>–¢—ã —ç–Ω–µ—Ä–≥–∏—á–µ–Ω, –∫–∞–∫ –¥–µ–ª—å—Ñ–∏–Ω, –∏ –≤—Å–µ–≥–¥–∞ –Ω–∞—Ö–æ–¥–∏—à—å —Ä–∞–¥–æ—Å—Ç—å –≤ –¥–≤–∏–∂–µ–Ω–∏–∏ –∏ –æ–±—â–µ–Ω–∏–∏ —Å –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏.</b>\n\n
                            <i>–í–∑—è–≤ –Ω–∞ –ø–æ–ø–µ—á–µ–Ω–∏–µ –¥–µ–ª—å—Ñ–∏–Ω–∞, —Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∏—à—å –∂–∏–≤–æ—Ç–Ω–æ–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å–∏–º–≤–æ–ª–∏–∑–∏—Ä—É–µ—Ç –∂–∏–∑–Ω–µ–ª—é–±–∏–µ, —Å–≤–æ–±–æ–¥—É –∏ –ª—é–±–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.</i>\n\n
                            <b>–î–µ–ª—å—Ñ–∏–Ω –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç —Ç–µ–±—è –±—ã—Ç—å –µ—â—ë –±–æ–ª–µ–µ –æ—Ç–∫—Ä—ã—Ç—ã–º –º–∏—Ä—É –∏ –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–º, –∫—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –µ–≥–æ –≤–æ–¥–Ω—ã—Ö –ø—Ä–æ—Å—Ç–æ—Ä–∞—Ö.</b>\n\n
                            <i>–ó–∞–±–æ—Ç–∞ –æ –¥–µ–ª—å—Ñ–∏–Ω–µ ‚Äî —ç—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, —á—Ç–æ –≤–º–µ—Å—Ç–µ –º—ã –º–æ–∂–µ–º —Å–¥–µ–ª–∞—Ç—å –º–∏—Ä –±–æ–ª–µ–µ –∂–∏–≤—ã–º, —è—Ä–∫–∏–º –∏ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º.</i>
                            """, animal_link]
            description, link = result_dict[user_id]
            bot.send_photo(chat_id, photo=animal_link)
            bot.send_message(
                chat_id,
                description,
                parse_mode='HTML'
            )



@bot.message_handler(func=lambda message: message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üêò")
def quit_quiz(message):
    chat_id = message.chat.id
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = telebot.types.KeyboardButton(text="–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É ü¶Å")
    button2 = telebot.types.KeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑ üêò")
    button3 = telebot.types.KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤ —Å–æ—Ü—Å–µ—Ç–∏ ü¶í")
    button4 = telebot.types.KeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ üì®")
    button5 = telebot.types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üêò")
    keyboard.add(button1, button2, button3, button4, button5)

    with open('/home/a1nix/Desktop/fullstack_factory/python/moscow_zoo/zoo_bot/static/images/zoo_logo.jpeg',
              'rb') as photo1:
        bot.send_photo(chat_id, photo1)
    bot.send_message(
        chat_id,
        """
        <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Telegram –±–æ—Ç–∞ –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –ó–æ–æ–ø–∞—Ä–∫–∞!</b> ü¶Åüêòü¶í\n\n
        <i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:</i>\n
        - <b>–ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –≤–∏–∫—Ç–æ—Ä–∏–Ω—É"</b> –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –≤–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ üêØ\n
        - <b>–ö–Ω–æ–ø–∫–∞ "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑"</b> –ø–æ–∑–≤–æ–ª–∏—Ç –ø—Ä–æ–π—Ç–∏ –µ—â–µ —Ä–∞–∑ –Ω–∞—à—É –≤–∏–∫—Ç–æ—Ä–∏–Ω—É üíå\n
        - <b>–ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º"</b> –ø–æ–º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å –ø–æ—Å—Ç –æ –≤–∞—à–µ–º —Ç–æ—Ç–µ–º–Ω–æ–º –∂–∏–≤–æ—Ç–Ω–æ–º –≤ —Å–æ—Ü—Å–µ—Ç–∏ üìù\n
        - –ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —Å–ª—É–∂–±–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>"–°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏"</b> ‚ùì\n\n
        <b>–î–ª—è –≤—ã–¥–∞—á–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∂–∏–≤–æ—Ç–Ω–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: <code>/animal –∏–º—è_–∂–∏–≤–æ—Ç–Ω–æ–≥–æ</code> –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ üî§</b>\n
        <b>–ü—Ä–∏–º–µ—Ä—ã –∫–æ–º–∞–Ω–¥:</b> \n
        <code>/animal dog</code> \n
        <code>/animal elephant</code>
        
        """,
        parse_mode='HTML',
        reply_markup=keyboard
    )
    # –¥–µ–ª–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –≤–≤–æ–¥ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
    if message.text not in config.valid_commands and not message.text.startswith('/animal'):
        bot.send_message(chat_id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é –∫–æ–º–∞–Ω–¥—É')




